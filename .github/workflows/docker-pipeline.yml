name: Build and Push Multiarch Docker Image

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    name: Build & Scan & Push
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry (ghcr.io)
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Build and export image to DockerHub cache
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        platforms: linux/amd64,linux/arm64
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/weather-cache:latest
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/weather-cache:latest,mode=max
        outputs: type=docker

  #   - name: Scan image with Trivy
  # uses: aquasecurity/trivy-action@master
  # with:
  #   image-ref: ghcr.io/${{ github.repository }}:latest
  #   format: table
  #   severity: CRITICAL,HIGH
  #   exit-code: 1


    - name: Push image to GHCR (if no CVEs found)
      if: success()
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ghcr.io/${{ github.repository }}:latest
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/weather-cache:latest
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/weather-cache:latest,mode=max
